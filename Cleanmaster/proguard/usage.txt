android.support.annotation.AnimRes
android.support.annotation.AnimatorRes
android.support.annotation.AnyRes
android.support.annotation.ArrayRes
android.support.annotation.AttrRes
android.support.annotation.BoolRes
android.support.annotation.ColorRes
android.support.annotation.DimenRes
android.support.annotation.DrawableRes
android.support.annotation.FractionRes
android.support.annotation.IdRes
android.support.annotation.IntDef
android.support.annotation.IntegerRes
android.support.annotation.InterpolatorRes
android.support.annotation.LayoutRes
android.support.annotation.MenuRes
android.support.annotation.NonNull
android.support.annotation.Nullable
android.support.annotation.PluralsRes
android.support.annotation.RawRes
android.support.annotation.StringDef
android.support.annotation.StringRes
android.support.annotation.StyleRes
android.support.annotation.StyleableRes
android.support.annotation.XmlRes
com.go.launcher.taskmanager.AbstractTaskManager
com.go.launcher.taskmanager.AbstractTaskManager$1
com.go.launcher.taskmanager.AbstractTaskManager$_APPINFORINTERNAL
com.go.launcher.taskmanager.AbstractTaskManager$_PROCESSINFORINTERNAL
com.go.launcher.taskmanager.IInstanceHolder
com.go.launcher.taskmanager.ITaskManager
com.go.launcher.taskmanager.LockFreeList
com.go.launcher.taskmanager.LockFreeList$Entry
com.go.launcher.taskmanager.LockFreeList$ListStateHolder
com.go.launcher.taskmanager.LockFreeList$a
com.go.launcher.taskmanager.SingletonFactory
com.go.launcher.taskmanager.SingletonFactory$a
com.go.launcher.taskmanager._APPINFOR
com.go.launcher.taskmanager._PROCESSINFOR
com.smartapp.ex.cleanmaster.BuildConfig
com.smartapp.ex.cleanmaster.R
com.smartapp.ex.cleanmaster.R$anim
com.smartapp.ex.cleanmaster.R$attr
com.smartapp.ex.cleanmaster.R$color
com.smartapp.ex.cleanmaster.R$drawable
com.smartapp.ex.cleanmaster.R$id
com.smartapp.ex.cleanmaster.R$layout
com.smartapp.ex.cleanmaster.R$string
com.smartapp.ex.cleanmaster.R$style
com.zhidian.wifibox.activity.CleanMasterActivity:
    public static final int MSG_CACHE
    public static final int MSG_APK
    public static final int MSG_RAM
    public static final int MSG_TRASH
    public static final int MSG_UPDATE_SELECT
com.zhidian.wifibox.controller.CleanMasterController:
    public static final java.lang.String SCAN
    public static final java.lang.String CLEAN
com.zhidian.wifibox.root.RootShell:
    private static final int MAX_WAIT_TIME
    private static final java.lang.String CMD_TOKEN
    private static final int STATE_ROOT_TIME_OUT
    private static final int STATE_ROOT_DENIED
    private static final int STATE_ROOTED
    104:107:public static synchronized boolean isInit()
com.zhidian.wifibox.root.RootShell$Command:
    public static final int EXIT_CODE_NORMAL
    public static final int EXIT_CODE_EXCEPTIOIN
    public static final int TIME_OUT
    363:363:public int getExitCode()
com.zhidian.wifibox.util.AppUtils:
    public static final java.lang.String WX_PACKAGE_NAME
    public static final java.lang.String BROWSER_PACKAGE_NAME
    private static final java.lang.String SCHEME
    private static final java.lang.String APP_PKG_NAME_21
    private static final java.lang.String APP_PKG_NAME_22
    private static final java.lang.String APP_DETAILS_PACKAGE_NAME
    private static final java.lang.String APP_DETAILS_CLASS_NAME
    38:38:public AppUtils()
    70:92:public static java.util.Map getRunningApp(android.content.Context)
    126:151:public static java.util.List getAllApps(android.content.Context)
    158:176:public static java.lang.String getAllAppsString(android.content.Context)
    186:194:public static boolean isRoot()
    202:215:public static boolean isRoot2()
    221:225:public static java.lang.String getVersion(android.content.Context,java.lang.String)
    244:251:public static boolean isCanUseSim()
    262:264:public static boolean emailFormat(java.lang.String)
    269:282:public static java.lang.String readAssetsFile(android.content.Context,java.lang.String)
    328:347:public static void showInstalledAppDetails(android.content.Context,java.lang.String)
    351:355:public static java.lang.reflect.Method getMethod(android.content.pm.PackageManager,java.lang.String)
    361:365:public static varargs void invokeMethod(android.content.pm.PackageManager,java.lang.String,java.lang.Object[])
    371:383:public static boolean isServiceRunning(android.content.Context,java.lang.String)
    390:403:public static boolean isInstallWx(android.content.Context,java.lang.String)
    411:425:public static java.lang.String exceptionTOString(java.lang.Throwable)
com.zhidian.wifibox.util.DrawUtil:
    24:24:public DrawUtil()
    45:46:public static int px2dip(android.content.Context,float)
    100:131:public static android.graphics.Bitmap createProgressBitmap(android.content.Context,android.graphics.Bitmap,int)
    219:269:public static android.graphics.Bitmap createH5IntroBitmap(int,int,int,int,int,int)
com.zhidian.wifibox.util.FileUtil:
    43:43:public FileUtil()
    52:69:public static java.io.File createNewFile(java.lang.String,boolean)
    73:89:public static long getDirSize(java.io.File)
    97:114:public static boolean saveByteToFile(byte[],java.lang.String)
    121:141:public static byte[] getByteFromFile(java.lang.String)
    147:148:public static java.lang.String getImagePath()
    154:159:public static java.lang.String getDownIconPath(java.lang.String)
    164:174:public static void creaFile()
    189:201:public static boolean saveBitmapToSDFile(android.graphics.Bitmap,java.lang.String,android.graphics.Bitmap$CompressFormat)
    212:226:public static android.graphics.Bitmap getSDBitmap(java.lang.String)
    233:233:public static boolean isSDCardAvaiable()
    243:250:public static java.lang.String getDbName()
    259:273:public static long getSDCardFreeSize()
    280:287:public static boolean isFileExist(java.lang.String)
    297:310:public static java.lang.String convertFileSize(long)
    320:334:public static java.lang.String bytes2kb(long)
    341:346:public static java.lang.String convertDownloadTimes(long)
    354:363:public static java.lang.String convertTime(int)
    373:377:public static java.lang.String milliscond2Time(int)
    384:396:public static java.lang.String formatTime(int)
    401:446:public static void copyFile(java.lang.String,java.lang.String)
    453:468:public static java.util.List readLine(java.lang.String)
    479:484:public static boolean deleteFile(java.lang.String)
    495:504:public static boolean DeleteFolder(java.lang.String)
    518:548:public static boolean deleteDirectory(java.lang.String)
    554:565:public static void scanSdCard(android.content.Context)
    569:569:public static java.lang.String getFileExtension(java.io.File)
    577:580:public static java.lang.String getFileExtension(java.lang.String)
    588:590:public static java.lang.String getFileMimeType(java.io.File)
com.zhidian.wifibox.util.InfoUtil:
    public static final int DEFAULT_INTERNET_TIME
    private int Width
    private int Height
    37:43:public InfoUtil(android.content.Context)
    46:46:public int getWidth()
    50:51:public void setWidth(int)
    54:54:public int getHeight()
    58:59:public void setHeight(int)
    65:67:public static java.lang.String getIMEI(android.content.Context)
    74:77:public static java.lang.String getIMSI(android.content.Context)
    86:86:public static java.lang.String getModel()
    93:93:public static java.lang.String getVersion()
    100:111:public static java.lang.String getSimOperatorName(android.content.Context)
    118:118:public static java.lang.String getManuFacturer()
    125:130:public static java.lang.String getrResolution(android.content.Context)
    137:139:public static java.lang.String getISO(android.content.Context)
    146:149:public static java.lang.String getLocalMacAddress(android.content.Context)
    158:166:public static java.lang.String getVersionName(android.content.Context)
    174:176:public static java.lang.String getBoxId(android.content.Context)
    185:190:public static final boolean hasNetWorkConnection(android.content.Context)
    198:203:public static final boolean hasWifiConnection(android.content.Context)
    211:215:public static final boolean hasGPRSConnection(android.content.Context)
    224:236:public static final int getNetWorkConnectionType(android.content.Context)
    244:250:public static final java.lang.String getCurWifiName(android.content.Context)
    257:284:public static final long getTotalRAM()
    289:317:public static java.lang.String getDeviceInfo(android.content.Context)
    321:330:public static final java.lang.String getCurProcessName(android.content.Context)
com.zhidian.wifibox.util.Setting:
    public static final java.lang.String SHARED_PREFERENCE_NAME
    public static final java.lang.String APPID
    public static final java.lang.String INSTALL_TIME
    public static final java.lang.String FIRST_TIME
    public static final java.lang.String WIFI_BOX
    public static final java.lang.String TIME_ONLINE
    public static final java.lang.String INSTALL_STATUS
    public static final java.lang.String SETTING_ISLOADIMAGER_KEY
    public static final java.lang.String INSTALL_AFTER_DOWNLOAD
    public static final java.lang.String DELETE_AFTER_INSTALL
    public static final java.lang.String UPDATE_TIME
    public static final java.lang.String UPDATE_COUNT
    public static final java.lang.String HAS_SHOW_CMODETIP
    public static final java.lang.String HAS_SHOW_XMODETIP
    public static final java.lang.String METER_LAST_POINT
    public static final java.lang.String METER_NEED_CALCULATE
    public static final java.lang.String FIRST_UPDATE_CONTENT
    public static final java.lang.String OPEN_APP_TIME
    public static final java.lang.String TODAYTIME
    public static final java.lang.String TIMESTAMP
    public static final java.lang.String PROTECT_APP
    public static final java.lang.String HASREGISTERUSERINFO
    public static final java.lang.String SHOW_H5INTRO
    public static final java.lang.String SHOW_ADVERTISEMENT_TIME
    public static final java.lang.String MIBAO_LOCATION_TIME_PREFIX
    public static final java.lang.String FIRST_RECORD_RUNNINGAPP
    public static final java.lang.String APP_LAST_RUNNING_TIME
    public static final java.lang.String CLEANMASTER_OPEN_COUNT
    public static final java.lang.String DOWNLOAD_SUCCESS_COUNT
    public static final java.lang.String OPEN_APP_COUNT
    public static final java.lang.String X_DOWNLOAD_COUNT
    public static final java.lang.String APP_USED_TOTAL_TIME
    public static final java.lang.String CONNECT_INTERNAL_WIFI_COUNT
    public static final java.lang.String APP_DOWNLOAD_FAIL_COUNT
    74:74:public boolean getBoolean(java.lang.String)
    78:78:public boolean getBoolean(java.lang.String,boolean)
    90:91:public void putInt(java.lang.String,int)
    94:94:public int getInt(java.lang.String)
    98:98:public long getLong(java.lang.String)
    102:103:public void putLong(java.lang.String,long)
    106:107:public void remove(java.lang.String)
com.zhidian.wifibox.view.ScanView:
    91:92:public void setPosition(int)
    103:104:public void setCallBack(com.zhidian.wifibox.view.ScanView$ProgressCallBack)
com.zhidian3g.wifibox.imagemanager.AsyncImageManager:
    private static final java.lang.String THREAD_POOL_MANAGER_NAME
    private static final int THREAD_POOL_COREPOOL_SIZE
    private static final int THREAD_POOL_MAXIMUMPOOL_SIZE
    private static final long THREAD_POOL_KEEPALIVE_TIME
    private static final int CONNECT_TIME_OUT
    private static final int READ_TIME_OUT
    117:133:public android.graphics.Bitmap loadImgFromSD(java.lang.String,java.lang.String,java.lang.String,boolean)
    154:185:public android.graphics.Bitmap loadImgFromSD2(java.lang.String,java.lang.String,java.lang.String,boolean)
    198:211:private int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int)
    237:258:public android.graphics.Bitmap loadImgFromVideo(java.lang.String,java.lang.String,java.lang.String,boolean,int,int,int)
    265:269:public java.net.HttpURLConnection createURLConnection(java.lang.String)
    313:341:public android.graphics.Bitmap loadImgFromNetwork(java.lang.String)
    364:415:public android.graphics.Bitmap loadImage(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,com.zhidian3g.wifibox.imagemanager.AsyncImageManager$AsyncImageLoadedCallBack)
    438:490:public android.graphics.Bitmap loadVideoImage(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,com.zhidian3g.wifibox.imagemanager.AsyncImageManager$AsyncImageLoadedCallBack)
    513:548:public android.graphics.Bitmap loadAlbumImage(java.lang.String,java.lang.String,java.lang.String,boolean,com.zhidian3g.wifibox.imagemanager.AsyncImageManager$AsyncImageLoadedCallBack)
    675:676:public void removeAllTask()
    682:686:public static synchronized void destory()
    689:692:public void clear()
com.zhidian3g.wifibox.imagemanager.AsyncImageManager$1
com.zhidian3g.wifibox.imagemanager.AsyncImageManager$2
com.zhidian3g.wifibox.imagemanager.AsyncImageManager$3
com.zhidian3g.wifibox.imagemanager.DefaultImageCache:
    65:68:public int size()
    72:75:public void clear()
    79:85:public void remove(java.lang.String)
    89:106:public void recycle(java.lang.String)
com.zhidian3g.wifibox.imagemanager.IImageCache:
    public abstract void remove(java.lang.String)
    public abstract void recycle(java.lang.String)
    public abstract void clear()
com.zhidian3g.wifibox.imagemanager.LruCache
com.zhidian3g.wifibox.imagemanager.LruImageCache
com.zhidian3g.wifibox.imagemanager.LruImageCache$1
com.zhidian3g.wifibox.imagemanager.ThreadPoolManager:
    private static final int DEFAULT_COREPOOL_SIZE
    private static final int DEFAULT_MAXIMUMPOOL_SIZE
    private static final long DEFAULT_KEEPALIVE_TIME
    70:72:public static synchronized void buildInstance(java.lang.String,int,int,long,java.util.concurrent.TimeUnit)
    154:164:public void cancel(java.lang.Runnable)
    169:178:public void removeAllTask()
    192:220:private void cleanUp()
    226:240:public static synchronized void destory()
mobi.intuitit.android.content.LauncherIntent:
    public static final java.lang.String PNAME
mobi.intuitit.android.content.LauncherIntent$Action
mobi.intuitit.android.content.LauncherIntent$Broadcast
mobi.intuitit.android.content.LauncherIntent$Error
mobi.intuitit.android.content.LauncherIntent$Extra
mobi.intuitit.android.content.LauncherIntent$Extra$Scroll
mobi.intuitit.android.content.LauncherIntent$Extra$Scroll$Mapping
mobi.intuitit.android.content.LauncherIntent$Extra$Scroll$Types
mobi.intuitit.android.content.LauncherIntent$Notification
mobi.intuitit.android.content.LauncherMetadata
mobi.intuitit.android.content.LauncherMetadata$Requirements
mobi.intuitit.android.widget.BoundRemoteViews:
    312:313:public BoundRemoteViews(int)
    373:375:public void setBoundString(int,java.lang.String,int,int)
    378:380:public void setBoundCharSequence(int,java.lang.String,int,int)
    383:385:public void setBoundByte(int,java.lang.String,int)
    388:390:public void setBoundShort(int,java.lang.String,int)
    393:395:public void setBoundInt(int,java.lang.String,int)
    398:400:public void setBoundLong(int,java.lang.String,int)
    403:405:public void setBoundFloat(int,java.lang.String,int)
    408:410:public void setBoundDouble(int,java.lang.String,int)
    413:415:public void setBoundChar(int,java.lang.String,int)
    418:420:public void setBoundUri(int,java.lang.String,int)
    423:425:public void setBoundBitmap(int,java.lang.String,int,int)
    429:430:public void SetBoundOnClickIntent(int,android.app.PendingIntent,java.lang.String,int)
mobi.intuitit.android.widget.BoundRemoteViews$BindingAction:
    public static final int tag
    101:105:public BoundRemoteViews$BindingAction(mobi.intuitit.android.widget.BoundRemoteViews,int,java.lang.String,int,int,int)
mobi.intuitit.android.widget.BoundRemoteViews$SetBoundOnClickIntent:
    223:228:public BoundRemoteViews$SetBoundOnClickIntent(mobi.intuitit.android.widget.BoundRemoteViews,int,android.app.PendingIntent,java.lang.String,int)
mobi.intuitit.android.widget.ListViewImageManager:
    136:147:public void unbindDrawables()
    150:152:public void clearCache()
mobi.intuitit.android.widget.SimpleRemoteViews:
    524:526:public SimpleRemoteViews(int)
    565:565:public int getLayoutId()
    574:578:protected void addAction(mobi.intuitit.android.widget.SimpleRemoteViews$Action)
    587:588:public void setViewVisibility(int,int)
    597:598:public void setTextViewText(int,java.lang.CharSequence)
    607:608:public void setImageViewResource(int,int)
    617:618:public void setImageViewUri(int,android.net.Uri)
    627:628:public void setImageViewBitmap(int,android.graphics.Bitmap)
    645:648:public void setChronometer(int,long,java.lang.String,boolean)
    665:670:public void setProgressBar(int,int,int,boolean)
    681:682:public void setOnClickPendingIntent(int,android.app.PendingIntent)
    712:714:public void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int)
    724:725:public void setTextColor(int,int)
    735:736:public void setBoolean(int,java.lang.String,boolean)
    746:747:public void setByte(int,java.lang.String,byte)
    757:758:public void setShort(int,java.lang.String,short)
    768:769:public void setInt(int,java.lang.String,int)
    779:780:public void setLong(int,java.lang.String,long)
    790:791:public void setFloat(int,java.lang.String,float)
    801:802:public void setDouble(int,java.lang.String,double)
    812:813:public void setChar(int,java.lang.String,char)
    823:824:public void setString(int,java.lang.String,java.lang.String)
    834:835:public void setCharSequence(int,java.lang.String,java.lang.CharSequence)
    845:846:public void setUri(int,java.lang.String,android.net.Uri)
    859:860:public void setBitmap(int,java.lang.String,android.graphics.Bitmap)
    870:871:public void setBundle(int,java.lang.String,android.os.Bundle)
    874:875:public void setViewWidth(int,int)
    878:879:public void setViewHeight(int,int)
    911:912:public void reapply(android.view.View)
mobi.intuitit.android.widget.SimpleRemoteViews$ReflectionAction:
    321:323:SimpleRemoteViews$ReflectionAction(mobi.intuitit.android.widget.SimpleRemoteViews,int,java.lang.String,int,java.lang.Object)
    325:329:protected SimpleRemoteViews$ReflectionAction(mobi.intuitit.android.widget.SimpleRemoteViews,int,java.lang.String,int)
mobi.intuitit.android.widget.SimpleRemoteViews$SetDrawableParameters:
    149:156:public SimpleRemoteViews$SetDrawableParameters(mobi.intuitit.android.widget.SimpleRemoteViews,int,boolean,int,int,android.graphics.PorterDuff$Mode,int)
mobi.intuitit.android.widget.SimpleRemoteViews$SetLayoutSize:
    100:104:public SimpleRemoteViews$SetLayoutSize(mobi.intuitit.android.widget.SimpleRemoteViews,int,int,int)
mobi.intuitit.android.widget.SimpleRemoteViews$SetOnClickPendingIntent:
    public static final int TAG
    233:236:public SimpleRemoteViews$SetOnClickPendingIntent(mobi.intuitit.android.widget.SimpleRemoteViews,int,android.app.PendingIntent)
mobi.intuitit.android.widget.WidgetCellLayout:
    23:24:public WidgetCellLayout(android.content.Context)
    47:65:public void onViewportIn()
    76:98:public void onViewportOut()
    103:115:private void a(android.view.ViewGroup)
mobi.intuitit.android.widget.WidgetCursorAdapter
mobi.intuitit.android.widget.WidgetCursorAdapter$a
mobi.intuitit.android.widget.WidgetCursorAdapter$b
mobi.intuitit.android.widget.WidgetListAdapter:
    126:130:public void clearDataCache()
mobi.intuitit.android.widget.WidgetSpace:
    67:68:public WidgetSpace(android.content.Context)
    public abstract android.app.Activity getLauncherActivity()
    346:350:public synchronized boolean isWidgetScrollable(int)
    355:380:public synchronized boolean unbindWidgetScrollable()
    383:434:public synchronized boolean unbindWidgetScrollableId(int)
    780:795:public void registerProvider()
    801:804:public void unregisterProvider()
    814:818:void a(android.content.Context,android.content.BroadcastReceiver)
