cn.trinea.android.common.util.ArrayUtils
cn.trinea.android.common.util.ListUtils
cn.trinea.android.common.util.ObjectUtils
cn.trinea.android.common.util.PackageUtils:
    public static final java.lang.String TAG
    public static final int APP_INSTALL_AUTO
    public static final int APP_INSTALL_INTERNAL
    public static final int APP_INSTALL_EXTERNAL
    public static final int INSTALL_SUCCEEDED
    public static final int INSTALL_FAILED_ALREADY_EXISTS
    public static final int INSTALL_FAILED_INVALID_APK
    public static final int INSTALL_FAILED_INVALID_URI
    public static final int INSTALL_FAILED_INSUFFICIENT_STORAGE
    public static final int INSTALL_FAILED_DUPLICATE_PACKAGE
    public static final int INSTALL_FAILED_NO_SHARED_USER
    public static final int INSTALL_FAILED_UPDATE_INCOMPATIBLE
    public static final int INSTALL_FAILED_SHARED_USER_INCOMPATIBLE
    public static final int INSTALL_FAILED_MISSING_SHARED_LIBRARY
    public static final int INSTALL_FAILED_REPLACE_COULDNT_DELETE
    public static final int INSTALL_FAILED_DEXOPT
    public static final int INSTALL_FAILED_OLDER_SDK
    public static final int INSTALL_FAILED_CONFLICTING_PROVIDER
    public static final int INSTALL_FAILED_NEWER_SDK
    public static final int INSTALL_FAILED_TEST_ONLY
    public static final int INSTALL_FAILED_CPU_ABI_INCOMPATIBLE
    public static final int INSTALL_FAILED_MISSING_FEATURE
    public static final int INSTALL_FAILED_CONTAINER_ERROR
    public static final int INSTALL_FAILED_INVALID_INSTALL_LOCATION
    public static final int INSTALL_FAILED_MEDIA_UNAVAILABLE
    public static final int INSTALL_FAILED_VERIFICATION_TIMEOUT
    public static final int INSTALL_FAILED_VERIFICATION_FAILURE
    public static final int INSTALL_FAILED_PACKAGE_CHANGED
    public static final int INSTALL_FAILED_UID_CHANGED
    public static final int INSTALL_PARSE_FAILED_NOT_APK
    public static final int INSTALL_PARSE_FAILED_BAD_MANIFEST
    public static final int INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION
    public static final int INSTALL_PARSE_FAILED_NO_CERTIFICATES
    public static final int INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES
    public static final int INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING
    public static final int INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME
    public static final int INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID
    public static final int INSTALL_PARSE_FAILED_MANIFEST_MALFORMED
    public static final int INSTALL_PARSE_FAILED_MANIFEST_EMPTY
    public static final int INSTALL_FAILED_INTERNAL_ERROR
    public static final int INSTALL_FAILED_OTHER
    public static final int DELETE_SUCCEEDED
    public static final int DELETE_FAILED_INTERNAL_ERROR
    public static final int DELETE_FAILED_DEVICE_POLICY_MANAGER
    public static final int DELETE_FAILED_INVALID_PACKAGE
    public static final int DELETE_FAILED_PERMISSION_DENIED
    57:57:public PackageUtils()
    80:84:public static final int install(android.content.Context,java.lang.String)
    97:108:public static boolean installNormal(android.content.Context,java.lang.String)
    332:336:public static final int uninstall(android.content.Context,java.lang.String)
    349:358:public static boolean uninstallNormal(android.content.Context,java.lang.String)
    371:371:public static int uninstallSilent(android.content.Context,java.lang.String)
    400:430:public static int uninstallSilent(android.content.Context,java.lang.String,boolean)
    508:523:public static java.lang.Boolean isTopActivity(android.content.Context,java.lang.String)
    534:548:public static int getAppVersionCode(android.content.Context)
    606:620:public static void startInstalledAppDetails(android.content.Context,java.lang.String)
cn.trinea.android.common.util.ShellUtils:
    public static final java.lang.String COMMAND_SU
    public static final java.lang.String COMMAND_SH
    public static final java.lang.String COMMAND_EXIT
    public static final java.lang.String COMMAND_LINE_END
    27:27:public ShellUtils()
    40:40:public static boolean checkRootPermission()
    52:52:public static cn.trinea.android.common.util.ShellUtils$CommandResult execCommand(java.lang.String,boolean)
    64:64:public static cn.trinea.android.common.util.ShellUtils$CommandResult execCommand(java.util.List,boolean)
    76:76:public static cn.trinea.android.common.util.ShellUtils$CommandResult execCommand(java.lang.String[],boolean)
    102:102:public static cn.trinea.android.common.util.ShellUtils$CommandResult execCommand(java.util.List,boolean,boolean)
cn.trinea.android.common.util.ShellUtils$CommandResult:
    208:210:public ShellUtils$CommandResult(int)
cn.trinea.android.common.util.StringUtils
cn.trinea.android.view.autoscrollviewpager.AutoScrollViewPager:
    public static final int DEFAULT_INTERVAL
    public static final int LEFT
    public static final int RIGHT
    public static final int SLIDE_BORDER_MODE_NONE
    public static final int SLIDE_BORDER_MODE_CYCLE
    public static final int SLIDE_BORDER_MODE_TO_PARENT
    public static final int SCROLL_WHAT
    81:81:public boolean getIntercept()
    115:117:public void startAutoScroll(int)
    263:263:public long getInterval()
    283:283:public int getDirection()
    293:294:public void setDirection(int)
    303:303:public boolean isCycle()
    314:315:public void setCycle(boolean)
    323:323:public boolean isStopScrollWhenTouch()
    332:333:public void setStopScrollWhenTouch(boolean)
    344:344:public int getSlideBorderMode()
    367:367:public boolean isBorderAnimation()
    377:378:public void setBorderAnimation(boolean)
cn.trinea.android.view.autoscrollviewpager.CustomDurationScroller:
    17:18:public CustomDurationScroller(android.content.Context)
com.desrcibe.bigimageview.Compat:
    private static final int SIXTY_FPS_INTERVAL
    25:25:public Compat()
com.desrcibe.bigimageview.CupcakeGestureDetector:
    private static final java.lang.String LOG_TAG
com.desrcibe.bigimageview.EclairGestureDetector:
    private static final int INVALID_POINTER_ID
com.desrcibe.bigimageview.HackyViewPager:
    private static final java.lang.String TAG
com.desrcibe.bigimageview.IPhotoView:
    public static final float DEFAULT_MAX_SCALE
    public static final float DEFAULT_MID_SCALE
    public static final float DEFAULT_MIN_SCALE
    public static final int DEFAULT_ZOOM_DURATION
    public abstract boolean canZoom()
    public abstract android.graphics.RectF getDisplayRect()
    public abstract boolean setDisplayMatrix(android.graphics.Matrix)
    public abstract android.graphics.Matrix getDisplayMatrix()
    public abstract float getMinScale()
    public abstract float getMinimumScale()
    public abstract float getMidScale()
    public abstract float getMediumScale()
    public abstract float getMaxScale()
    public abstract float getMaximumScale()
    public abstract float getScale()
    public abstract android.widget.ImageView$ScaleType getScaleType()
    public abstract void setAllowParentInterceptOnEdge(boolean)
    public abstract void setMinScale(float)
    public abstract void setMinimumScale(float)
    public abstract void setMidScale(float)
    public abstract void setMediumScale(float)
    public abstract void setMaxScale(float)
    public abstract void setMaximumScale(float)
    public abstract void setOnLongClickListener(android.view.View$OnLongClickListener)
    public abstract void setOnMatrixChangeListener(com.desrcibe.bigimageview.PhotoViewAttacher$OnMatrixChangedListener)
    public abstract void setOnPhotoTapListener(com.desrcibe.bigimageview.PhotoViewAttacher$OnPhotoTapListener)
    public abstract com.desrcibe.bigimageview.PhotoViewAttacher$OnPhotoTapListener getOnPhotoTapListener()
    public abstract void setOnViewTapListener(com.desrcibe.bigimageview.PhotoViewAttacher$OnViewTapListener)
    public abstract com.desrcibe.bigimageview.PhotoViewAttacher$OnViewTapListener getOnViewTapListener()
    public abstract void setScale(float)
    public abstract void setScale(float,boolean)
    public abstract void setScale(float,float,float,boolean)
    public abstract void setScaleType(android.widget.ImageView$ScaleType)
    public abstract void setZoomable(boolean)
    public abstract void setPhotoViewRotation(float)
    public abstract android.graphics.Bitmap getVisibleRectangleBitmap()
    public abstract void setZoomTransitionDuration(int)
com.desrcibe.bigimageview.LogManager:
    23:23:public LogManager()
    28:29:public static void setLogger(com.desrcibe.bigimageview.Logger)
com.desrcibe.bigimageview.Logger:
    public abstract int v(java.lang.String,java.lang.String)
    public abstract int v(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract int d(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract int i(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract int w(java.lang.String,java.lang.String)
    public abstract int w(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract int e(java.lang.String,java.lang.String)
    public abstract int e(java.lang.String,java.lang.String,java.lang.Throwable)
com.desrcibe.bigimageview.LoggerDefault:
    27:27:public int v(java.lang.String,java.lang.String)
    32:32:public int v(java.lang.String,java.lang.String,java.lang.Throwable)
    42:42:public int d(java.lang.String,java.lang.String,java.lang.Throwable)
    52:52:public int i(java.lang.String,java.lang.String,java.lang.Throwable)
    57:57:public int w(java.lang.String,java.lang.String)
    62:62:public int w(java.lang.String,java.lang.String,java.lang.Throwable)
    67:67:public int e(java.lang.String,java.lang.String)
    72:72:public int e(java.lang.String,java.lang.String,java.lang.Throwable)
com.desrcibe.bigimageview.PhotoView:
    38:39:public PhotoView(android.content.Context)
    58:59:public void setPhotoViewRotation(float)
    63:63:public boolean canZoom()
    68:68:public android.graphics.RectF getDisplayRect()
    73:73:public android.graphics.Matrix getDisplayMatrix()
    78:78:public boolean setDisplayMatrix(android.graphics.Matrix)
    84:84:public float getMinScale()
    89:89:public float getMinimumScale()
    95:95:public float getMidScale()
    100:100:public float getMediumScale()
    106:106:public float getMaxScale()
    111:111:public float getMaximumScale()
    116:116:public float getScale()
    126:127:public void setAllowParentInterceptOnEdge(boolean)
    132:133:public void setMinScale(float)
    137:138:public void setMinimumScale(float)
    143:144:public void setMidScale(float)
    148:149:public void setMediumScale(float)
    154:155:public void setMaxScale(float)
    159:160:public void setMaximumScale(float)
    189:190:public void setOnMatrixChangeListener(com.desrcibe.bigimageview.PhotoViewAttacher$OnMatrixChangedListener)
    199:200:public void setOnPhotoTapListener(com.desrcibe.bigimageview.PhotoViewAttacher$OnPhotoTapListener)
    204:204:public com.desrcibe.bigimageview.PhotoViewAttacher$OnPhotoTapListener getOnPhotoTapListener()
    209:210:public void setOnViewTapListener(com.desrcibe.bigimageview.PhotoViewAttacher$OnViewTapListener)
    214:214:public com.desrcibe.bigimageview.PhotoViewAttacher$OnViewTapListener getOnViewTapListener()
    219:220:public void setScale(float)
    224:225:public void setScale(float,boolean)
    229:230:public void setScale(float,float,float,boolean)
    243:244:public void setZoomable(boolean)
    248:248:public android.graphics.Bitmap getVisibleRectangleBitmap()
    253:254:public void setZoomTransitionDuration(int)
com.desrcibe.bigimageview.PhotoViewAttacher:
    private static final java.lang.String LOG_TAG
    static final int EDGE_NONE
    static final int EDGE_LEFT
    static final int EDGE_RIGHT
    static final int EDGE_BOTH
    67:74:private static void checkZoomLevels(float,float,float)
    188:192:public void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
    196:196:public boolean canZoom()
    248:262:public boolean setDisplayMatrix(android.graphics.Matrix)
    269:273:public void setPhotoViewRotation(float)
    295:295:public float getMinScale()
    306:306:public float getMidScale()
    317:317:public float getMaxScale()
    492:493:public void setAllowParentInterceptOnEdge(boolean)
    498:499:public void setMinScale(float)
    503:505:public void setMinimumScale(float)
    510:511:public void setMidScale(float)
    515:517:public void setMediumScale(float)
    522:523:public void setMaxScale(float)
    527:529:public void setMaximumScale(float)
    538:539:public void setOnMatrixChangeListener(com.desrcibe.bigimageview.PhotoViewAttacher$OnMatrixChangedListener)
    553:554:public void setOnViewTapListener(com.desrcibe.bigimageview.PhotoViewAttacher$OnViewTapListener)
    563:564:public void setScale(float)
    568:576:public void setScale(float,boolean)
    638:638:public android.graphics.Matrix getDisplayMatrix()
    762:763:public android.graphics.Bitmap getVisibleRectangleBitmap()
    768:771:public void setZoomTransitionDuration(int)
com.desrcibe.bigimageview.VersionedGestureDetector:
    22:22:public VersionedGestureDetector()
com.go.launcher.taskmanager.AbstractTaskManager
com.go.launcher.taskmanager.AbstractTaskManager$1
com.go.launcher.taskmanager.AbstractTaskManager$_APPINFORINTERNAL
com.go.launcher.taskmanager.AbstractTaskManager$_PROCESSINFORINTERNAL
com.go.launcher.taskmanager.IInstanceHolder
com.go.launcher.taskmanager.ITaskManager
com.go.launcher.taskmanager.LockFreeList
com.go.launcher.taskmanager.LockFreeList$Entry
com.go.launcher.taskmanager.LockFreeList$ListStateHolder
com.go.launcher.taskmanager.LockFreeList$a
com.go.launcher.taskmanager.SingletonFactory
com.go.launcher.taskmanager.SingletonFactory$a
com.go.launcher.taskmanager._APPINFOR
com.go.launcher.taskmanager._PROCESSINFOR
com.jiubang.core.framework.AbstractFrame
com.jiubang.core.framework.CleanManager
com.jiubang.core.framework.DispatchEventManager
com.jiubang.core.framework.FrameManager
com.jiubang.core.framework.ICleanable
com.jiubang.core.framework.IDispatchEventHandler
com.jiubang.core.framework.IDispatchEventManager
com.jiubang.core.framework.IFrameManager
com.jiubang.core.framework.IFrameworkMsgId
com.jiubang.core.framework.IKeyManager
com.jiubang.core.framework.ITimerListener
com.jiubang.core.framework.KeyManager
com.jiubang.core.framework.TimerBean
com.jiubang.core.framework.TimerManager
com.jiubang.core.framework.TimerManager$a
com.jiubang.core.framework.ViewManager
com.jiubang.core.mars.AbstractAnimateListener
com.jiubang.core.mars.EventType
com.jiubang.core.mars.IAnimateListener
com.jiubang.core.mars.ILayoutManager
com.jiubang.core.mars.ITicker
com.jiubang.core.mars.MImage:
    public static final int LEFT
    public static final int HCENTER
    public static final int RIGHT
    public static final int TOP
    public static final int VCENTER
    public static final int BOTTOM
    public static final int FILTER_NONE
    public static final int FILTER_EDGE
    public static final int FILTER_BEST
    android.graphics.Bitmap a
    int a
    int b
    float a
    float b
    float c
    float d
    float e
    boolean a
    boolean b
    boolean c
    android.graphics.Paint a
    android.graphics.Matrix a
    com.jiubang.core.mars.MImage a
    78:84:public MImage(android.graphics.Bitmap)
    94:100:public MImage(com.jiubang.core.mars.MImage)
    110:116:public MImage(android.graphics.drawable.BitmapDrawable)
    137:154:public MImage(android.graphics.drawable.Drawable,int,int,int,int)
    167:172:public MImage(android.graphics.Bitmap,boolean)
    185:190:public MImage(com.jiubang.core.mars.MImage,boolean)
    209:223:public MImage(int,int,int,int)
    233:239:public MImage(java.lang.String)
    251:257:public MImage(android.content.res.Resources,int)
    267:274:public MImage(java.io.InputStream)
    282:282:public int getWidth()
    291:291:public int getHeight()
    300:300:public float getScaleWidth()
    309:309:public float getScaleHeight()
    318:318:public float getRotation()
    327:327:public boolean getFlipAlongX()
    336:336:public boolean getFlipAlongY()
    345:345:public int getAlpha()
    354:354:public float getAnchorX()
    363:363:public float getAnchorY()
    371:378:public void setBitmap(android.graphics.Bitmap)
    385:395:public void setDrawable(android.graphics.drawable.BitmapDrawable)
    403:409:public void setAlpha(int)
    418:422:public void setRotation(float)
    433:438:public void setFlip(boolean,boolean)
    449:458:public void setScale(float,float)
    467:472:public void setScale(float)
    483:500:public void setAnchor(int)
    511:516:public void setAnchor(float,float)
    526:528:public void setRenderQuality(int)
    541:547:public void draw(android.graphics.Canvas,float,float)
    558:561:public void draw(android.graphics.Canvas,android.graphics.Matrix)
    567:583:public void reset()
    592:604:void a(com.jiubang.core.mars.MImage)
    610:625:void a()
    636:653:public void scaleToFit(int,int)
    661:661:public final android.graphics.Bitmap getBitmap()
    670:696:public com.jiubang.core.mars.MImage getDrawingCache()
    706:722:public void getDrawingCache(com.jiubang.core.mars.MImage)
    730:733:public android.graphics.Canvas getCanvas()
    743:743:public android.graphics.Paint getPaint()
    753:756:public void setPaint(android.graphics.Paint)
    764:765:public final android.graphics.Matrix getMatrix()
    776:791:public boolean savePng(java.lang.String)
    804:824:public boolean saveJpg(java.lang.String,int)
    834:841:public void setColorFilter(int)
    853:860:public void setColorFilter(int,android.graphics.PorterDuff$Mode)
    862:869:MImage(int)
    875:877:public void saveAttributes()
    883:884:public void restoreAttributes()
com.jiubang.core.mars.XAEngine
com.jiubang.core.mars.XAEngine$1
com.jiubang.core.mars.XALinear
com.jiubang.core.mars.XAnimator:
    private java.util.List a
    protected com.jiubang.core.mars.IAnimateListener mListener
    private int a
    private int b
    private long a
    private int c
    private boolean a
    private long b
    private long c
    private boolean b
    private int d
    private boolean c
    67:78:public XAnimator(int)
    90:108:public synchronized void attachAnimator(com.jiubang.core.mars.XAnimator)
    113:128:public synchronized void insertAnimator(int,com.jiubang.core.mars.XAnimator)
    132:137:public int indexOfAnimator(com.jiubang.core.mars.XAnimator)
    150:157:public synchronized void detachAnimator(com.jiubang.core.mars.XAnimator)
    172:192:public synchronized void replaceAnimator(int,com.jiubang.core.mars.XAnimator)
    196:197:public void slow(float)
    201:249:public synchronized boolean tick()
    254:270:protected boolean aniSelf()
    281:282:public void setAnimateListener(com.jiubang.core.mars.IAnimateListener)
    297:305:public void delay(int,long)
    309:322:public void start()
    326:328:public void reStart()
    337:337:public boolean isIndelay()
    342:343:public void stop()
    protected abstract boolean animate()
com.jiubang.core.mars.XComponent:
    public static android.content.Context mContext
    public long mId
    public volatile int mPaddingLeft
    public volatile int mPaddingRight
    public volatile int mPaddingTop
    public volatile int mPaddingBottom
    protected boolean mVisible
    private com.jiubang.core.mars.XMotion a
    private int e
    private android.graphics.Paint a
    protected boolean mIsFocused
    protected volatile boolean mIsSelected
    protected int mZorder
    private android.graphics.Rect a
    protected boolean mIsShowed
    int a
    int b
    int c
    int d
    java.lang.ref.SoftReference a
    125:132:public XComponent(int,int,int,int,int)
    143:149:public void setSize(int,int)
    157:157:public int getWidth()
    166:166:public int getHeight()
    176:182:public void setXY(int,int)
    192:193:public boolean contains(int,int)
    197:198:public int centerX()
    202:203:public int centerY()
    207:210:public android.graphics.Point centerXY(android.graphics.Point)
    219:224:public android.graphics.Rect getRect(android.graphics.Rect)
    231:235:private void a()
    244:245:public void setEventListener(com.jiubang.core.mars.IComponentEventListener)
    253:253:public com.jiubang.core.mars.IComponentEventListener getEventListener()
    protected abstract void drawCurrentFrame(android.graphics.Canvas)
    267:268:public void layout(int,int,int,int)
    279:289:protected final void setPosition(int,int,int,int)
    302:305:public void paintCurrentFrame(android.graphics.Canvas,float,float)
    309:313:public final void drawComponent(android.graphics.Canvas)
    316:322:protected boolean aniSelf()
    359:359:public android.graphics.Bitmap creatSnapshot()
    369:370:public void setVisible(boolean)
    378:378:public com.jiubang.core.mars.XPanel getAttachPanel()
    388:389:public void setAttachPanel(com.jiubang.core.mars.XPanel)
    392:401:private void b()
    409:409:public boolean isVisible()
    419:430:public void setMotionFilter(com.jiubang.core.mars.XMotion)
    438:438:public com.jiubang.core.mars.XMotion getMotionFilter()
    486:488:public com.jiubang.core.mars.MImage getCurrframe()
    492:492:public boolean onKey(android.view.KeyEvent)
    496:496:public boolean isFocused()
    500:507:public void setFocused(boolean)
    510:510:public boolean isSelected()
    514:515:public void setSelected(boolean)
    518:518:public boolean isIsPressed()
    522:523:public void setIsPressed(boolean)
    531:531:public int getZorder()
    540:544:public void setZorder(int)
    550:554:public void checkIsShowed()
    557:557:public boolean isShowed()
    565:565:protected void onShow()
    571:573:public void close()
    579:580:protected void onHide()
    601:602:public void requestLayout()
    605:606:public void offsetLeftAndRight(int)
    609:610:public void offsetTopAndBottom(int)
    632:632:boolean a()
    636:636:android.content.Context a()
    640:647:public void setDrawingCacheBackgroundColor(int)
    649:649:public int getDrawingCacheBackgroundColor()
    653:654:public void setDrawingCacheAlpha(int)
    656:656:public int getDrawingCacheAlpha()
    660:661:public void setDrawingCacheEnabled(boolean)
    664:664:public boolean isDrawingCacheEnabled()
    668:671:public android.graphics.Bitmap getDrawingCache()
    675:680:public void destroyDrawingCache()
    683:753:public void buildDrawingCache()
    756:769:void a(int,int)
    775:779:public void invalidate()
com.jiubang.core.mars.XLinearLayout
com.jiubang.core.mars.XMElastic
com.jiubang.core.mars.XMElastic$1
com.jiubang.core.mars.XMElastic$a
com.jiubang.core.mars.XMElastic$b
com.jiubang.core.mars.XMElastic$c
com.jiubang.core.mars.XMElastic$d
com.jiubang.core.mars.XMElastic$e
com.jiubang.core.mars.XMElastic$f
com.jiubang.core.mars.XMotion
com.jiubang.core.mars.XPanel:
    protected java.util.ArrayList mStoreComponent
    private boolean a
    private com.jiubang.core.mars.ILayoutManager a
    protected com.jiubang.core.mars.XComponent mFocusComponent
    protected int mGroupFlags
    62:64:public XPanel(int,int,int,int,int)
    70:76:public com.jiubang.core.mars.XComponent getDrawComponent(int)
    90:102:public void paintCurrentFrame(android.graphics.Canvas,float,float)
    106:107:protected void drawCurrentFrame(android.graphics.Canvas)
    115:139:protected final synchronized void drawAllChildComponents(android.graphics.Canvas)
    143:143:protected boolean animate()
    156:168:public synchronized void addComponent(com.jiubang.core.mars.XComponent)
    181:184:public int indexOfComponent(com.jiubang.core.mars.XComponent)
    197:209:public synchronized void removeComponent(com.jiubang.core.mars.XComponent)
    221:225:public synchronized void removeComponent(int)
    237:247:public synchronized void removeAllComponent()
    263:278:public synchronized void insertComponent(int,com.jiubang.core.mars.XComponent)
    292:310:public synchronized void replaceComponent(com.jiubang.core.mars.XComponent,com.jiubang.core.mars.XComponent)
    324:350:public synchronized void replaceComponent(int,com.jiubang.core.mars.XComponent)
    359:360:public void setClipMode(boolean)
    441:449:public synchronized boolean onKey(android.view.KeyEvent)
    458:458:public synchronized int getChildCount()
    469:476:public com.jiubang.core.mars.XComponent getChildAt(int)
    481:484:protected void onShow()
    488:494:protected synchronized void onHide()
    498:501:public void layout(int,int,int,int)
    509:510:public void setLayout(com.jiubang.core.mars.ILayoutManager)
    531:539:public synchronized void destroyDrawingCache()
    546:546:protected boolean isChildrenDrawnWithCacheEnabled()
    550:551:protected void setChildrenDrawnWithCacheEnabled(boolean)
    554:559:private void a(int,boolean)
com.jiubang.core.mars.XSurfaceFrame:
    46:47:public XSurfaceFrame(android.content.Context)
    93:114:public void tick()
    118:128:protected boolean isRepaint()
    134:160:private void a(android.graphics.Canvas)
    164:172:public synchronized void addComponent(com.jiubang.core.mars.XComponent)
    176:180:public synchronized void removeComponent(com.jiubang.core.mars.XComponent)
    184:184:public int getBgColor()
    189:190:public void setBgColor(int)
    194:194:public com.jiubang.core.mars.MImage getBgImg()
    199:200:public void setBgImg(com.jiubang.core.mars.MImage)
com.jiubang.core.message.IMsgType
com.jiubang.core.message.MessageManager:
    public static final int BASE_MSG_ID
    43:44:public void setFilter(com.jiubang.core.message.IMessageFilter)
    89:98:public boolean send(java.lang.Object,int,int,int,int,java.lang.Object,java.util.List)
    104:104:public boolean send(java.lang.Object,int,int,int,java.lang.Object,java.util.List)
    119:131:public void post(java.lang.Object,int,int,int,java.lang.Object,java.util.List)
    145:164:public void sendBroadcast(java.lang.Object,int,int,int,java.lang.Object,java.util.List)
    168:172:public void sendBroadcast(java.lang.Object,int,int,java.lang.Object,java.util.List)
    187:206:public void sendBroadcast(java.lang.Object,int,int,int,java.lang.Object,java.util.List,int[])
    243:253:public void sendBroadcastHandler(java.lang.Object,int,int,java.lang.Object,java.util.List)
    265:276:public void postBroadcast(java.lang.Object,int,int,java.lang.Object,java.util.List)
    289:300:public void postBroadcast(java.lang.Object,int,int,java.lang.Object,java.util.List,int[])
    310:322:public void postRunnable(java.lang.Object,java.lang.Runnable,boolean)
    332:344:public void postUiRunnable(java.lang.Object,java.lang.Runnable,boolean)
    362:366:public boolean registMsgHandler(com.jiubang.core.message.IMessageHandler,int)
    371:374:public boolean unRegistMsgHandler(com.jiubang.core.message.IMessageHandler,int)
    394:401:public void cleanup()
com.jiubang.core.message.Queue:
    52:52:public int size()
    62:62:public boolean add(java.lang.Object)
    73:73:public boolean set(int,java.lang.Object)
    81:82:public void clear()
com.jiubang.core.message.a:
    553:571:public final boolean a(com.jiubang.core.message.b)
com.jiubang.core.message.c:
    83:83:synchronized java.util.List a(int)
    95:124:synchronized java.util.List a(int,int[])
    136:155:private static java.util.List a(java.util.Collection,java.util.List)
    268:272:public void cleanup()
com.jiubang.core.message.d:
    507:507:final boolean a(com.jiubang.core.message.b)
com.zhidian.wifibox.BuildConfig
com.zhidian.wifibox.R:
    10:10:public R()
com.zhidian.wifibox.R$anim
com.zhidian.wifibox.R$attr
com.zhidian.wifibox.R$color
com.zhidian.wifibox.R$dimen
com.zhidian.wifibox.R$drawable
com.zhidian.wifibox.R$id
com.zhidian.wifibox.R$layout
com.zhidian.wifibox.R$menu
com.zhidian.wifibox.R$string
com.zhidian.wifibox.R$style
com.zhidian.wifibox.R$styleable:
    public static final int FlowLayout_debugDraw
    public static final int FlowLayout_horizontalSpacing
    public static final int FlowLayout_orientation
    public static final int FlowLayout_verticalSpacing
    public static final int FlowLayout_LayoutParams_layout_horizontalSpacing
    public static final int FlowLayout_LayoutParams_layout_newLine
    public static final int FlowLayout_LayoutParams_layout_verticalSpacing
    public static final int SlidingMenu_behindOffset
    public static final int SlidingMenu_behindScrollScale
    public static final int SlidingMenu_behindWidth
    public static final int SlidingMenu_fadeDegree
    public static final int SlidingMenu_fadeEnabled
    public static final int SlidingMenu_mode
    public static final int SlidingMenu_selectorDrawable
    public static final int SlidingMenu_selectorEnabled
    public static final int SlidingMenu_shadowDrawable
    public static final int SlidingMenu_shadowWidth
    public static final int SlidingMenu_touchModeAbove
    public static final int SlidingMenu_touchModeBehind
    public static final int SlidingMenu_viewAbove
    public static final int SlidingMenu_viewBehind
    1374:1374:public R$styleable()
com.zhidian.wifibox.R$xml
com.zhidian.wifibox.activity.ImagePagerActivity:
    private static final java.lang.String STATE_POSITION
    public static final java.lang.String EXTRA_IMAGE_INDEX
    public static final java.lang.String EXTRA_IMAGE_URLS
    public static final java.lang.String PARAMS
    public static final java.lang.String POSTION
    public static final java.lang.String BUNLDER
com.zhidian.wifibox.activity.MainActivity:
    public static final java.lang.String JUMP_TO_UPDATECONTAINER
    public static final java.lang.String JUMP_TO_DOWNLOADMANAGER
    103:107:public static boolean sendMessage(java.lang.Object,int,int,int,java.lang.Object,java.util.List)
com.zhidian.wifibox.adapter.CommentAdapter:
    41:43:public void clear()
com.zhidian.wifibox.adapter.ImagePageAdapter
com.zhidian.wifibox.controller.ActivateCountController:
    public static final java.lang.String ACTIVATECOUNT
    public static final java.lang.String SQLITEACTIVATECOUNT
com.zhidian.wifibox.controller.BannerController:
    public static final java.lang.String LOAD_DATA
com.zhidian.wifibox.controller.CategoriesController:
    public static final java.lang.String NEXT_PAGE
com.zhidian.wifibox.controller.CategoryContentController:
    public static final java.lang.String NEXT_PAGE
com.zhidian.wifibox.controller.DetailController:
    public static final java.lang.String GAIN_NETWORK
    public static final java.lang.String GAIN_CORRELATION
com.zhidian.wifibox.controller.DownloadCountController:
    public static final java.lang.String DOWNLOADCOUNT
    public static final java.lang.String SQLITE_DOWNLOADCOUNT
com.zhidian.wifibox.controller.DownloadManagerController:
    public static final java.lang.String GET_DOWNLOAD_TASK
com.zhidian.wifibox.controller.ExtraController:
    public static final java.lang.String NEXT_PAGE
com.zhidian.wifibox.controller.FeatureController:
    public static final java.lang.String NEXT_PAGE
com.zhidian.wifibox.controller.InstallCountController:
    public static final java.lang.String INSTALLCOUNT
    public static final java.lang.String SQLITE_INSTALLCOUNT
com.zhidian.wifibox.controller.MainController:
    public static final java.lang.String REGISTER_USERINFO
    public static final java.lang.String CHECK_FOR_UPDATE
    public static final java.lang.String CHECK_MEMORY
com.zhidian.wifibox.controller.MarketInstallController:
    public static final java.lang.String INSTALL_MARKET
com.zhidian.wifibox.controller.ModeManager:
    public static final java.lang.String XMODEPREFIX
    public static final int COMMON_MODE
    public static final int X_MODE
com.zhidian.wifibox.controller.RankingController:
    public static final java.lang.String NEXT_PAGE
com.zhidian.wifibox.controller.SearchController:
    public static final java.lang.String START_SEARCH
    public static final java.lang.String SEARCH_KEY_AUTOCOMPLETE
    public static final java.lang.String SEARCH_KEY_RECOMMEND
com.zhidian.wifibox.controller.SpkExceptionController:
    public static final java.lang.String UPLOADEXCPTION
com.zhidian.wifibox.controller.TabController:
    public static final java.lang.String NAVIGATIONTOPIC
    public static final java.lang.String NAVIGATIONAPP
    public static final java.lang.String NAVIGATIONFEATURE
    public static final java.lang.String NAVIGATIONGAME
    public static final java.lang.String NAVIGATIONMANAGE
    public static final java.lang.String XNAVIGATIONMUST
    public static final java.lang.String XNAVIGATIONNEW
    public static final java.lang.String XNAVIGATIONALL
    public static final java.lang.String FEATUREHOTAPP
    public static final java.lang.String FEATUREHOTGAME
    public static final java.lang.String FEATURETOPIC
    public static final java.lang.String FEATURECHARTS
    public static final java.lang.String SWITCH_NAVIGATION
    public static final java.lang.String JUMP_NEXT_LEVEL
    public static final java.lang.String FALLBACK_TAB
    public static final java.lang.String JUMP_TO_UPDATE
    public static final java.lang.String JUMP_TO_DOWNLOAD
com.zhidian.wifibox.controller.TopicContentController:
    public static final java.lang.String NEXT_PAGE
com.zhidian.wifibox.controller.TopicController:
    public static final java.lang.String NEXT_PAGE
com.zhidian.wifibox.controller.UpdateController:
    public static final java.lang.String GAIN_UPDATE_NETWORK
com.zhidian.wifibox.controller.XAllController:
    public static final java.lang.String NEXT_PAGE
com.zhidian.wifibox.controller.XBoxIdController:
    public static final java.lang.String GAIN_BOXID
com.zhidian.wifibox.controller.XMustController:
    public static final java.lang.String NEXT_PAGE
com.zhidian.wifibox.controller.XNewController:
    public static final java.lang.String NEXT_PAGE
com.zhidian.wifibox.data.CDataDownloader:
    public static final java.lang.String BASE_URL
    public static final java.lang.String ADT_BASE_URL
    21:21:public CDataDownloader()
    58:58:public static java.lang.String getLastAppUrl(int)
    65:65:public static java.lang.String getPopularAppUrl(int)
    94:94:public static java.lang.String getLastGameUrl(int)
    101:101:public static java.lang.String getPopularGameUrl(int)
    294:294:public static java.lang.String getpPlugUninstall()
com.zhidian.wifibox.data.CommentBean:
    public int statusCode
    public java.lang.String message
    public int totalPages
com.zhidian.wifibox.data.DataParser:
    23:23:public DataParser()
    627:639:public static java.lang.String parseBoxIdData(java.lang.String)
com.zhidian.wifibox.data.DetailDataBean:
    public int downloadStatus
    public int alreadyDownloadPercent
com.zhidian.wifibox.data.SearchResultDataBean
com.zhidian.wifibox.data.SpkInstallBean
com.zhidian.wifibox.data.Stack:
    50:50:public boolean empty()
com.zhidian.wifibox.data.TabDataManager:
    156:157:public synchronized void removePageData(java.lang.String)
    163:164:public synchronized void removeAllTabData()
    205:205:public synchronized com.zhidian.wifibox.data.TabDataGroup popTab()
    212:212:public synchronized com.zhidian.wifibox.data.TabDataGroup peekTab()
com.zhidian.wifibox.data.XDataDownload:
    public static final java.lang.String BASE_URL
    12:12:public XDataDownload()
com.zhidian.wifibox.db.DBOpenHelper:
    private static final java.lang.String DBNAME
    private static final int VERSION
com.zhidian.wifibox.db.dao.AppActivateCountDao:
    118:127:public void deleteData()
com.zhidian.wifibox.db.dao.AppDownloadCountDao:
    111:120:public void deleteData()
com.zhidian.wifibox.db.dao.AppInstallCountDao:
    78:106:public com.zhidian.wifibox.data.AppInstallBean queryData(java.lang.String)
    153:161:public void deleteData()
com.zhidian.wifibox.db.dao.InstallSpkDao
com.zhidian.wifibox.db.table.AppActivateCountTable:
    public static final java.lang.String TABLE_NAME
    public static final java.lang.String FIELD_PRIMARY_KEY
    public static final java.lang.String FIELD_UUID
    public static final java.lang.String FIELD_BOXNUM
    public static final java.lang.String FIELD_DOWNLOADSOURCE
    public static final java.lang.String FIELD_APPID
    public static final java.lang.String FIELD_PACKAGENAME
    public static final java.lang.String FIELD_VERSION
    public static final java.lang.String FIELD_ACTIVATETIME
    public static final java.lang.String FIELD_INSTALLTIME
    public static final java.lang.String FIELD_ISNETWORK
    public static final java.lang.String FIELD_ISINSERTSD
    public static final java.lang.String FIELD_DOWNLOADMODEL
    public static final java.lang.String FIELD_NETWORKWAY
    11:11:public AppActivateCountTable()
com.zhidian.wifibox.db.table.AppDownloadCountTable:
    public static final java.lang.String TABLE_NAME
    public static final java.lang.String FIELD_PRIMARY_KEY
    public static final java.lang.String FIELD_UUID
    public static final java.lang.String FIELD_BOXNUM
    public static final java.lang.String FIELD_DOWNLOADSOURCE
    public static final java.lang.String FIELD_APPID
    public static final java.lang.String FIELD_PACKAGENAME
    public static final java.lang.String FIELD_VERSION
    public static final java.lang.String FIELD_DOWNLOADMODEL
    public static final java.lang.String FIELD_NETWORKWAY
    public static final java.lang.String FIELD_DOWNLOADTIME
    11:11:public AppDownloadCountTable()
com.zhidian.wifibox.db.table.AppInstallCountTable:
    public static final java.lang.String TABLE_NAME
    public static final java.lang.String FIELD_PRIMARY_KEY
    public static final java.lang.String FIELD_UUID
    public static final java.lang.String FIELD_BOXNUM
    public static final java.lang.String FIELD_DOWNLOADSOURCE
    public static final java.lang.String FIELD_APPID
    public static final java.lang.String FIELD_PACKAGENAME
    public static final java.lang.String FIELD_VERSION
    public static final java.lang.String FIELD_INSTALLTIME
    public static final java.lang.String FIELD_INSTALLTYPE
    public static final java.lang.String FIELD_STATUS
    public static final java.lang.String FIELD_DOWNLOADMODEL
    public static final java.lang.String FIELD_NETWORKWAY
    11:11:public AppInstallCountTable()
com.zhidian.wifibox.db.table.AppPackgeTable:
    public static final java.lang.String TABLE_NAME
    public static final java.lang.String FIELD_PRIMARY_KEY
    public static final java.lang.String FIELD_PACKAGENAME
    public static final java.lang.String FIELD_APPID
    public static final java.lang.String FIELD_DOWNLOADSOURCE
    public static final java.lang.String FIELD_INSTALLTIME
    public static final java.lang.String FIELD_DOWNLOADMODEL
    public static final java.lang.String FIELD_VERSION
    public static final java.lang.String FIELD_ACTIVIT
    11:11:public AppPackgeTable()
com.zhidian.wifibox.db.table.InstallSpkTable:
    public static final java.lang.String TABLE_NAME
    public static final java.lang.String FIELD_PRIMARY_KEY
    public static final java.lang.String FIELD_BOXNUM
    public static final java.lang.String FIELD_UUID
    public static final java.lang.String FIELD_INSTALLTIME
    public static final java.lang.String FIELD_INSTALLPACKAGENAME
    public static final java.lang.String FIELD_MANUFACTURER
    public static final java.lang.String FIELD_MODEL
    public static final java.lang.String FIELD_VERSION
    public static final java.lang.String FIELD_SIMOPERATORNAME
    public static final java.lang.String FIELD_NETWORKCOUNTRYISO
    public static final java.lang.String FIELD_MAC
    public static final java.lang.String FIELD_IMEI
    public static final java.lang.String FIELD_IMSI
    10:10:public InstallSpkTable()
com.zhidian.wifibox.download.CDownloadManager:
    public static final java.lang.String DOWNLOADING
    public static final java.lang.String PAUSE_DOWNLOADING
com.zhidian.wifibox.download.DownloadTask:
    public static final int NOT_START
    public static final int DOWNLOADING
    public static final int PAUSING
    public static final int COMPLETE
    public static final int FAIL
    public static final int INSTALLING
com.zhidian.wifibox.download.IDownloadInterface:
    public static final java.lang.String DOWNLOAD_REQUEST_ACTION
    public static final java.lang.String REQUEST_COMMAND_ADD
    public static final java.lang.String REQUEST_COMMAND_PAUSE
    public static final java.lang.String REQUEST_COMMAND_CONTINUE
    public static final java.lang.String REQUEST_COMMAND_DELETE
    public static final java.lang.String REQUEST_COMMAND_REDOWNLOAD
    public static final java.lang.String REQUEST_COMMAND_CHECKTASK
    public static final java.lang.String DOWNLOAD_BROADCAST_ACTION
    public static final java.lang.String DOWNLOAD_MODECHANGE_ACTION
com.zhidian.wifibox.download.XDownLoadCallback
com.zhidian.wifibox.download.XDownloadManager:
    public static final java.lang.String DOWNLOADING
    public static final java.lang.String PAUSE_DOWNLOADING
com.zhidian.wifibox.handler.DeferredHandler
com.zhidian.wifibox.handler.DeferredHandler$Impl
com.zhidian.wifibox.handler.InstallHandler
com.zhidian.wifibox.handler.InstallHandler$1
com.zhidian.wifibox.listener.CustomDialogButLister
com.zhidian.wifibox.listener.HomePageRefreshListener
com.zhidian.wifibox.message.CrashHandler:
    public static final java.lang.String TAG
com.zhidian.wifibox.message.IDiyFrameIds
com.zhidian.wifibox.message.IDiyMsgIds
com.zhidian.wifibox.pulldownlistview.LoadingListener
com.zhidian.wifibox.pulldownlistview.PullDownRefreshView:
    public static final int STATUS_PULL_TO_REFRESH
    public static final int STATUS_RELEASE_TO_REFRESH
    public static final int STATUS_REFRESHING
    public static final int STATUS_REFRESH_FINISHED
    public static final int SCROLL_SPEED
    public static final long ONE_MINUTE
    public static final long ONE_HOUR
    public static final long ONE_DAY
    public static final long ONE_MONTH
    public static final long ONE_YEAR
    private static final java.lang.String UPDATED_AT
    302:302:public boolean getRefreshState()
    396:399:public void finishRefreshing()
com.zhidian.wifibox.pulldownlistview.SpeedMustTreeView:
    private static final int MAX_ALPHA
    28:30:public SpeedMustTreeView(android.content.Context)
    99:110:public void setHeaderView(android.view.View)
com.zhidian.wifibox.pulldownlistview.SpeedMustTreeView$IphoneTreeHeaderAdapter:
    public static final int PINNED_HEADER_GONE
    public static final int PINNED_HEADER_VISIBLE
    public static final int PINNED_HEADER_PUSHED_UP
com.zhidian.wifibox.receiver.BootReceiver:
    private static final java.lang.String ACTION
com.zhidian.wifibox.receiver.CheckRunningAppReceiver:
    120:125:public boolean filterApp(android.content.pm.ApplicationInfo)
com.zhidian.wifibox.receiver.ScanReceiver:
    public static final int ID
com.zhidian.wifibox.root.InstallApkThread
com.zhidian.wifibox.root.RootShell:
    private static final int MAX_WAIT_TIME
    private static final java.lang.String CMD_TOKEN
    private static final int STATE_ROOT_TIME_OUT
    private static final int STATE_ROOT_DENIED
    private static final int STATE_ROOTED
    104:107:public static synchronized boolean isInit()
com.zhidian.wifibox.root.RootShell$Command:
    public static final int EXIT_CODE_NORMAL
    public static final int EXIT_CODE_EXCEPTIOIN
    public static final int TIME_OUT
    363:363:public int getExitCode()
com.zhidian.wifibox.util.AppUtils:
    25:25:public AppUtils()
    105:113:public static boolean isRoot()
    121:134:public static boolean isRoot2()
com.zhidian.wifibox.util.CheckNetwork:
    15:15:public CheckNetwork()
com.zhidian.wifibox.util.DownloadUtil:
    public static final int sXDownloadSpeed
    25:25:public DownloadUtil()
    151:181:public static java.lang.String sendGet(java.lang.String)
com.zhidian.wifibox.util.DrawUtil:
    26:26:public DrawUtil()
    65:66:public static int px2dip(android.content.Context,float)
com.zhidian.wifibox.util.FileUtil:
    25:25:public FileUtil()
    109:110:public static java.lang.String getImagePath()
    116:121:public static java.lang.String getDownIconPath(java.lang.String)
    126:136:public static void creaFile()
    174:188:public static android.graphics.Bitmap getSDBitmap(java.lang.String)
com.zhidian.wifibox.util.GetTaskStateUtil:
    8:8:public GetTaskStateUtil()
    18:30:public static int getNotStartTaskCount(java.util.Map)
    41:54:public static int getDownloadingTaskCount(java.util.Map)
    64:78:public static int getPausingTaskCount(java.util.Map)
    88:101:public static int getCompleteTaskCount(java.util.Map)
com.zhidian.wifibox.util.HtmlRegexpUtil:
    private static final java.lang.String regxpForHtml
    private static final java.lang.String regxpForImgTag
    11:11:public HtmlRegexpUtil()
com.zhidian.wifibox.util.InfoUtil:
    44:45:public void setWidth(int)
    48:48:public int getHeight()
    52:53:public void setHeight(int)
    158:163:public static java.lang.String getrResolution(android.content.Context)
    218:223:public static final boolean hasNetWorkConnection(android.content.Context)
    244:248:public static final boolean hasGPRSConnection(android.content.Context)
    257:269:public static final int getNetWorkConnectionType(android.content.Context)
com.zhidian.wifibox.util.PathConstant:
    public static final java.lang.String TEMP_SUFFIX
    14:14:public PathConstant()
com.zhidian.wifibox.util.Setting:
    private static com.zhidian.wifibox.util.Setting instance
    public static final java.lang.String SHARED_PREFERENCE_NAME
    public static final java.lang.String APPID
    public static final java.lang.String INSTALL_TIME
    public static final java.lang.String FIRST_TIME
    public static final java.lang.String WIFI_BOX
    public static final java.lang.String INSTALL_STATUS
    public static final java.lang.String SETTING_ISLOADIMAGER_KEY
    public static final java.lang.String INSTALL_AFTER_DOWNLOAD
    public static final java.lang.String DELETE_AFTER_INSTALL
    public static final java.lang.String UPDATE_TIME
    public static final java.lang.String UPDATE_COUNT
    public static final java.lang.String HAS_SHOW_CMODETIP
    public static final java.lang.String HAS_SHOW_XMODETIP
    40:43:public static com.zhidian.wifibox.util.Setting getInstance(android.content.Context)
    67:68:public void putInt(java.lang.String,int)
    75:75:public long getLong(java.lang.String)
    79:80:public void putLong(java.lang.String,long)
com.zhidian.wifibox.util.ToastUtils
com.zhidian.wifibox.util.ToastUtils$1
com.zhidian.wifibox.util.ToastUtils$2
com.zhidian.wifibox.util.ZoomBitmap
com.zhidian.wifibox.view.AdvViewPager:
    16:17:public AdvViewPager(android.content.Context)
com.zhidian.wifibox.view.AppImageGalleryView:
    30:33:public AppImageGalleryView(android.content.Context)
    53:53:public int getMaxRotationAngle()
    59:61:public void setMaxRotationAngle(int)
    65:65:public int getMaxZoom()
    71:73:public void setMaxZoom(int)
com.zhidian.wifibox.view.FlowLayout:
    public static final int HORIZONTAL
    public static final int VERTICAL
    22:25:public FlowLayout(android.content.Context)
com.zhidian.wifibox.view.ListViewSearchFooterView:
    public static final int STATE_GONE
    public static final int STATE_LOADING
    public static final int STATE_RETRY
    public static final int STATE_MORE
    69:76:public void showMore()
    105:105:public int getState()
com.zhidian.wifibox.view.MainDrawer:
    207:207:public void onModeChange()
com.zhidian.wifibox.view.MyScrollLayout:
    private static final java.lang.String TAG
    private static final int SNAP_VELOCITY
    285:286:public void SetOnViewChangeListener(com.zhidian.wifibox.view.OnViewChangeListener)
com.zhidian.wifibox.view.NotificationProgressBar:
    java.lang.String status
    21:23:public NotificationProgressBar(android.content.Context)
    66:67:private void setText()
    76:86:public void setStatus(int)
com.zhidian.wifibox.view.ReflectedImageView
com.zhidian.wifibox.view.SearchView:
    public static final int DEFAULT_PAGENO
    public static final java.lang.String TAG
com.zhidian.wifibox.view.TabManageView:
    463:463:public com.zhidian3g.wifibox.view.scroller.ScreenScroller getScreenScroller()
    468:468:public void setScreenScroller(com.zhidian3g.wifibox.view.scroller.ScreenScroller)
com.zhidian.wifibox.view.TabPagerAdapter
com.zhidian.wifibox.view.TextProgressBar:
    java.lang.String status
    66:67:private void setText()
    76:86:public void setStatus(int)
com.zhidian.wifibox.view.dialog.ConfirmDialog:
    private android.view.View$OnClickListener mListenerImpl
    41:43:public ConfirmDialog(android.content.Context,java.lang.CharSequence)
com.zhidian.wifibox.view.imageScale.FlingAnimation:
    68:69:public void setFactor(float)
com.zhidian.wifibox.view.imageScale.GestureImageView:
    public static final java.lang.String GLOBAL_NS
    public static final java.lang.String LOCAL_NS
    126:129:public GestureImageView(android.content.Context)
    446:448:public void moveBy(float,float)
    490:490:public boolean isStrict()
    498:498:public boolean isRecycle()
    506:513:public void reset()
    520:521:public void setGestureImageViewListener(com.zhidian.wifibox.view.imageScale.GestureImageViewListener)
    695:695:public boolean isPortrait()
    703:705:public void setStartingPosition(float,float)
    721:727:public boolean isOrientationAligned()
com.zhidian.wifibox.view.imageScale.GestureImageViewTouchListener:
    458:465:public void reset()
    469:469:public float getMaxScale()
    477:477:public float getMinScale()
com.zhidian.wifibox.view.imageScale.MathUtils:
    22:22:public MathUtils()
    37:39:public static float distance(float,float,float,float)
    61:67:public void rotate(android.graphics.PointF,android.graphics.PointF,float)
com.zhidian.wifibox.view.imageScale.MoveAnimation:
    73:75:public void reset()
    79:79:public float getTargetX()
    84:85:public void setTargetX(float)
    89:89:public float getTargetY()
    93:94:public void setTargetY(float)
    97:97:public long getAnimationTimeMS()
    101:102:public void setAnimationTimeMS(long)
com.zhidian.wifibox.view.imageScale.ZoomAnimation:
    129:129:public float getZoom()
    137:137:public float getTouchX()
    145:145:public float getTouchY()
    153:153:public long getAnimationLengthMS()
    157:158:public void setAnimationLengthMS(long)
    161:161:public com.zhidian.wifibox.view.imageScale.ZoomAnimationListener getZoomAnimationListener()
com.zhidian3g.wifibox.imagemanager.AsyncImageManager:
    private static final java.lang.String THREAD_POOL_MANAGER_NAME
    private static final int THREAD_POOL_COREPOOL_SIZE
    private static final int THREAD_POOL_MAXIMUMPOOL_SIZE
    private static final long THREAD_POOL_KEEPALIVE_TIME
    private static final int CONNECT_TIME_OUT
    private static final int READ_TIME_OUT
com.zhidian3g.wifibox.imagemanager.DefaultImageCache:
    65:68:public int size()
    79:85:public void remove(java.lang.String)
    89:106:public void recycle(java.lang.String)
com.zhidian3g.wifibox.imagemanager.IImageCache:
    public abstract void remove(java.lang.String)
    public abstract void recycle(java.lang.String)
com.zhidian3g.wifibox.imagemanager.LruCache:
    192:208:public final java.lang.Object remove(java.lang.Object)
    280:280:public final synchronized int size()
    289:289:public final synchronized int maxSize()
    296:296:public final synchronized int hitCount()
    304:304:public final synchronized int missCount()
    311:311:public final synchronized int createCount()
    318:318:public final synchronized int putCount()
    325:325:public final synchronized int evictionCount()
    333:333:public final synchronized java.util.Map snapshot()
com.zhidian3g.wifibox.imagemanager.LruImageCache:
    99:104:public void remove(java.lang.String)
    107:107:public int getMaxMemorySize()
    112:130:public void recycle(java.lang.String)
com.zhidian3g.wifibox.imagemanager.ThreadPoolManager:
    private static final int DEFAULT_COREPOOL_SIZE
    private static final int DEFAULT_MAXIMUMPOOL_SIZE
    private static final long DEFAULT_KEEPALIVE_TIME
    70:72:public static synchronized void buildInstance(java.lang.String,int,int,long,java.util.concurrent.TimeUnit)
    154:164:public void cancel(java.lang.Runnable)
    192:220:private void cleanUp()
    226:240:public static synchronized void destory()
com.zhidian3g.wifibox.view.scroller.CycloidDrawListener
com.zhidian3g.wifibox.view.scroller.CycloidScreenScroller
com.zhidian3g.wifibox.view.scroller.CycloidScroller
com.zhidian3g.wifibox.view.scroller.ExponentialInterpolator
com.zhidian3g.wifibox.view.scroller.FastVelocityTracker:
    static final int NUM_PAST
    static final int LONGEST_PAST_TIME
    69:70:public void computeCurrentVelocity(int)
com.zhidian3g.wifibox.view.scroller.IWallpaperDrawer:
    public abstract void updateOffsetY(int,boolean)
    public abstract void doDraw(android.graphics.Canvas,int,int)
    public abstract void drawBackground(android.graphics.Canvas)
    public abstract void setBackground(android.graphics.drawable.Drawable,android.graphics.Bitmap)
    public abstract android.graphics.drawable.Drawable getBackgroundDrawable()
    public abstract android.graphics.Bitmap getBackgroundBitmap()
    public abstract void setAlpha(int)
    public abstract void setCycloidDrawListener(com.zhidian3g.wifibox.view.scroller.CycloidDrawListener)
    public abstract void setUpdateBackground(boolean)
    public abstract void setMiddleScrollEnabled(boolean)
com.zhidian3g.wifibox.view.scroller.MScroller:
    public static final int HORIZONTAL
    public static final int VERTICAL
    protected static final int MAX_FRAME_TIME
    protected static final int FINISHED
    protected static final int ON_FLING
    protected static final int ON_SCROLL
    protected static final int TO_SCROLL
    protected static final float EPSILON
    protected static final float ONE_OVER_EPSILON
    private static final float SMOOTHING_SPEED
    protected static final float NANOTIME_DIV
    protected static final float ONE_OVER_NANOTIME_DIV
    276:276:public boolean onDraw(android.graphics.Canvas)
    280:281:public void setDepthEnabled(boolean)
    297:297:public final int getScroll()
    301:302:public void setScroll(int)
    305:306:public void setOrientation(int)
    309:309:public final int getOrientation()
com.zhidian3g.wifibox.view.scroller.ScreenScroller:
    public static final int INVALID_SCREEN
    protected int mScrollRange
    protected android.graphics.PorterDuffColorFilter mColorFilter
    protected int mBackgroundWidth
    protected boolean mCycloid
    protected boolean mBgAlwaysDrawn
    protected int mOverShootPercent
    146:159:public void setOrientation(int)
    265:270:public void setInterpolator(android.view.animation.Interpolator)
    290:298:public void setEffector(com.zhidian3g.wifibox.view.scroller.ScreenScrollerEffector)
    309:323:public void setCurrentScreen(int)
    334:338:public void setScrollPercent(float)
    349:354:public void setScrollIndex(float)
    436:436:public final android.view.animation.Interpolator getInterpolator()
    440:440:public final com.zhidian3g.wifibox.view.scroller.ScreenScrollerEffector getEffector()
    444:444:public final int getScreenWidth()
    448:448:public final int getScreenHeight()
    452:452:public final int getScreenSize()
    483:483:public final int getCurrentScreenOffset()
    502:502:public boolean isCircular()
    592:592:public int getFlingVelocityX()
    596:596:public int getFlingVelocityY()
    602:606:public boolean onDraw(android.graphics.Canvas)
    610:610:public boolean isBackgroundAlwaysDrawn()
    667:667:public boolean isScrollAtEnd()
    680:682:public void setEffectorMaxOvershootEnabled(boolean)
    718:718:public void setBackground(android.graphics.drawable.Drawable)
    726:741:public void setBackgroundColorFilter(int)
    749:754:public void setScreenOffsetY(int)
    762:766:public void setBackgroundScrollEnabled(java.lang.Boolean)
    789:792:public android.graphics.drawable.Drawable getBackground()
    796:796:public int getBackgroundOffsetX()
    800:800:public int getBackgroundOffsetY()
    804:838:public boolean drawBackground(android.graphics.Canvas,int)
    848:884:public boolean drawBackgroundOnScreen(android.graphics.Canvas,int)
    894:911:public void setOvershootPercent(int)
    920:922:public void setMaxOvershootPercent(int)
    925:925:public float getProgress()
    934:935:public int getIndicatorOffset()
    939:940:public void setBackgroundAlwaysDrawn(boolean)
    943:943:void recycle()
    951:951:public int getPreviousScreen()
    960:960:public int getNextScreen()
    969:976:public int getDrawingScreenA()
    985:996:public int getDrawingScreenB()
    1000:1000:public int getTouchDeltaX()
    1004:1004:public int getTouchDeltaY()
    1041:1056:public static void setCycleMode(com.zhidian3g.wifibox.view.scroller.ScreenScrollerListener,boolean)
    1065:1084:private static void copyScrollerAttributes(com.zhidian3g.wifibox.view.scroller.ScreenScroller,com.zhidian3g.wifibox.view.scroller.ScreenScroller)
    1123:1127:private static float solveOvershootInterpolatorTension(int)
    1131:1132:public void setLayoutScale(float)
    1135:1135:public float getLayoutScale()
    1139:1143:public void setWallpaperDrawer(com.zhidian3g.wifibox.view.scroller.IWallpaperDrawer)
    1152:1157:public boolean drawCurBackground(android.graphics.Canvas,int)
    1:1:public bridge synthetic void setScroll(int)
    1:1:public bridge synthetic void setDepthEnabled(boolean)
com.zhidian3g.wifibox.view.scroller.ScreenScrollerEffector:
    public abstract void setType(int)
    public abstract boolean onDraw(android.graphics.Canvas)
    public abstract void onAttach(com.zhidian3g.wifibox.view.scroller.ScreenScrollerListener)
    public abstract void onDetach()
    public abstract int getMaxOvershootPercent()
    public abstract void setDrawQuality(int)
    public abstract void recycle()
    public abstract void setScreenGap(int)
    public abstract void setTopPadding(int)
com.zhidian3g.wifibox.view.scroller.ScreenScrollerListener:
    public abstract com.zhidian3g.wifibox.view.scroller.ScreenScroller getScreenScroller()
    public abstract void setScreenScroller(com.zhidian3g.wifibox.view.scroller.ScreenScroller)
com.zhidian3g.wifibox.view.scroller.Scroller
com.zhidian3g.wifibox.view.scroller.ScrollerEffector
com.zhidian3g.wifibox.view.scroller.ScrollerListener
com.zhidian3g.wifibox.view.scroller.ScrollerViewGroup:
    private static final int TOUCH_STATE_REST
    private static final int TOUCH_STATE_SCROLLING
    57:59:public ScrollerViewGroup(android.content.Context,android.util.AttributeSet,com.zhidian3g.wifibox.view.scroller.ScreenScrollerListener)
    182:185:public void addScreenView(android.view.View)
    193:196:public void gotoViewByIndex(int)
    210:214:public int getCurrentViewIndex()
    218:222:public android.view.View getCurrentView()
    241:244:public void setPadding(float)
    253:254:public void setScreenScroller(com.zhidian3g.wifibox.view.scroller.ScreenScroller)
    257:260:public void destory()
    413:414:public void setCircle(boolean)
    419:419:public boolean isNeedGap()
    423:424:public void setIsNeedGap(boolean)
    427:427:public int getGapWidth()
    431:432:public void setGapWidth(int)
    435:435:public int getGapColor()
    439:440:public void setGapColor(int)
    443:445:public void recyle(com.zhidian3g.wifibox.view.scroller.ScreenScrollerListener)
com.zhidian3g.wifibox.view.scroller.ViscousFluidInterpolater:
    static final float MidValue
    static final float mViscousFluidScale
mobi.intuitit.android.content.LauncherIntent:
    public static final java.lang.String PNAME
mobi.intuitit.android.content.LauncherIntent$Action
mobi.intuitit.android.content.LauncherIntent$Broadcast
mobi.intuitit.android.content.LauncherIntent$Error
mobi.intuitit.android.content.LauncherIntent$Extra
mobi.intuitit.android.content.LauncherIntent$Extra$Scroll
mobi.intuitit.android.content.LauncherIntent$Extra$Scroll$Mapping
mobi.intuitit.android.content.LauncherIntent$Extra$Scroll$Types
mobi.intuitit.android.content.LauncherIntent$Notification
mobi.intuitit.android.content.LauncherMetadata
mobi.intuitit.android.content.LauncherMetadata$Requirements
mobi.intuitit.android.widget.BoundRemoteViews:
    312:313:public BoundRemoteViews(int)
    373:375:public void setBoundString(int,java.lang.String,int,int)
    378:380:public void setBoundCharSequence(int,java.lang.String,int,int)
    383:385:public void setBoundByte(int,java.lang.String,int)
    388:390:public void setBoundShort(int,java.lang.String,int)
    393:395:public void setBoundInt(int,java.lang.String,int)
    398:400:public void setBoundLong(int,java.lang.String,int)
    403:405:public void setBoundFloat(int,java.lang.String,int)
    408:410:public void setBoundDouble(int,java.lang.String,int)
    413:415:public void setBoundChar(int,java.lang.String,int)
    418:420:public void setBoundUri(int,java.lang.String,int)
    423:425:public void setBoundBitmap(int,java.lang.String,int,int)
    429:430:public void SetBoundOnClickIntent(int,android.app.PendingIntent,java.lang.String,int)
mobi.intuitit.android.widget.BoundRemoteViews$BindingAction:
    public static final int tag
    101:105:public BoundRemoteViews$BindingAction(mobi.intuitit.android.widget.BoundRemoteViews,int,java.lang.String,int,int,int)
mobi.intuitit.android.widget.BoundRemoteViews$SetBoundOnClickIntent:
    223:228:public BoundRemoteViews$SetBoundOnClickIntent(mobi.intuitit.android.widget.BoundRemoteViews,int,android.app.PendingIntent,java.lang.String,int)
mobi.intuitit.android.widget.ListViewImageManager:
    136:147:public void unbindDrawables()
    150:152:public void clearCache()
mobi.intuitit.android.widget.SimpleRemoteViews:
    524:526:public SimpleRemoteViews(int)
    565:565:public int getLayoutId()
    574:578:protected void addAction(mobi.intuitit.android.widget.SimpleRemoteViews$Action)
    587:588:public void setViewVisibility(int,int)
    597:598:public void setTextViewText(int,java.lang.CharSequence)
    607:608:public void setImageViewResource(int,int)
    617:618:public void setImageViewUri(int,android.net.Uri)
    627:628:public void setImageViewBitmap(int,android.graphics.Bitmap)
    645:648:public void setChronometer(int,long,java.lang.String,boolean)
    665:670:public void setProgressBar(int,int,int,boolean)
    681:682:public void setOnClickPendingIntent(int,android.app.PendingIntent)
    712:714:public void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int)
    724:725:public void setTextColor(int,int)
    735:736:public void setBoolean(int,java.lang.String,boolean)
    746:747:public void setByte(int,java.lang.String,byte)
    757:758:public void setShort(int,java.lang.String,short)
    768:769:public void setInt(int,java.lang.String,int)
    779:780:public void setLong(int,java.lang.String,long)
    790:791:public void setFloat(int,java.lang.String,float)
    801:802:public void setDouble(int,java.lang.String,double)
    812:813:public void setChar(int,java.lang.String,char)
    823:824:public void setString(int,java.lang.String,java.lang.String)
    834:835:public void setCharSequence(int,java.lang.String,java.lang.CharSequence)
    845:846:public void setUri(int,java.lang.String,android.net.Uri)
    859:860:public void setBitmap(int,java.lang.String,android.graphics.Bitmap)
    870:871:public void setBundle(int,java.lang.String,android.os.Bundle)
    874:875:public void setViewWidth(int,int)
    878:879:public void setViewHeight(int,int)
    911:912:public void reapply(android.view.View)
mobi.intuitit.android.widget.SimpleRemoteViews$ReflectionAction:
    321:323:SimpleRemoteViews$ReflectionAction(mobi.intuitit.android.widget.SimpleRemoteViews,int,java.lang.String,int,java.lang.Object)
    325:329:protected SimpleRemoteViews$ReflectionAction(mobi.intuitit.android.widget.SimpleRemoteViews,int,java.lang.String,int)
mobi.intuitit.android.widget.SimpleRemoteViews$SetDrawableParameters:
    149:156:public SimpleRemoteViews$SetDrawableParameters(mobi.intuitit.android.widget.SimpleRemoteViews,int,boolean,int,int,android.graphics.PorterDuff$Mode,int)
mobi.intuitit.android.widget.SimpleRemoteViews$SetLayoutSize:
    100:104:public SimpleRemoteViews$SetLayoutSize(mobi.intuitit.android.widget.SimpleRemoteViews,int,int,int)
mobi.intuitit.android.widget.SimpleRemoteViews$SetOnClickPendingIntent:
    public static final int TAG
    233:236:public SimpleRemoteViews$SetOnClickPendingIntent(mobi.intuitit.android.widget.SimpleRemoteViews,int,android.app.PendingIntent)
mobi.intuitit.android.widget.WidgetCellLayout:
    23:24:public WidgetCellLayout(android.content.Context)
    47:65:public void onViewportIn()
    76:98:public void onViewportOut()
    103:115:private void a(android.view.ViewGroup)
mobi.intuitit.android.widget.WidgetCursorAdapter
mobi.intuitit.android.widget.WidgetCursorAdapter$a
mobi.intuitit.android.widget.WidgetCursorAdapter$b
mobi.intuitit.android.widget.WidgetListAdapter:
    126:130:public void clearDataCache()
mobi.intuitit.android.widget.WidgetSpace:
    67:68:public WidgetSpace(android.content.Context)
    public abstract android.app.Activity getLauncherActivity()
    346:350:public synchronized boolean isWidgetScrollable(int)
    355:380:public synchronized boolean unbindWidgetScrollable()
    383:434:public synchronized boolean unbindWidgetScrollableId(int)
    780:795:public void registerProvider()
    801:804:public void unregisterProvider()
    814:818:void a(android.content.Context,android.content.BroadcastReceiver)
